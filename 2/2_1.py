# Запрограммировать расчет кросскорреляционной функции
# Оформить алгоритм в виде функции  На входе подпрограммы: 
# массивы сигналов X и Y, величина сдвига тау , длина анализируемых участков реализаций N.  
# На выходе подпрограммы: кросскорреляционная функция 
# Используя созданную подпрограмму рассчитать и построить график автокорреляционной функции
# временного ряда “Sin.txt” для целых тау от  0 до 1000 
import numpy as np
import matplotlib.pyplot as plt

def cross_correlation(X, Y, tau, N):
    """ вычисляет кросскорреляционную функцию между двумя сигналами X и Y.
    
    НА ВХОД :
    X: массив сигналов X
    Y: массив сигналов Y
    tau: величина сдвига (количество временных шагов)
    N: длина анализируемых участков реализаций
    
    НА ВЫХОД:
    значение кросскорреляционной функции для заданного сдвига
    """
    # если tau отрицательный, сдвиг влево
    if tau < 0:
        #корреляция между последними N +tau элементами X и первыми N +    tau элементами Y
        return np.corrcoef(X[-tau:N], Y[0:N + tau])[0, 1]
    else:
        # если tau положительный, корреляция между первыми N -tau элементами X и последующими N -tau элементами Y
        return np.corrcoef(X[0:N - tau], Y[tau:N])[0, 1]

# Чтение данных из текстового файла
def load_signal(filename):
    return np.loadtxt(filename)

# Функция для вычисления автокорреляции сигнала
def auto_correlation(signal, max_tau):
    """ вычисляет автокорреляционную функцию для заданного сигнала.
    
    НА ВХОД:
    signal: массив значений сигнала
    max_tau: максимальное значение сдвига для расчета автокорреляции
    
    НА ВЫХОД:
    список значений автокорреляции для каждого значения tau от 0 до max_tau
    """
    N = len(signal)  # длина сигнала
    acf = []  # список для хранения значений автокорреляции
    
    # проходим по всем значениям tau от 0 до max_tau
    for tau in range(max_tau + 1):
        acf_value = cross_correlation(signal, signal, tau, N)  # вычисляем автокорреляцию для текущего tau
        acf.append(acf_value)  # добавляем значение в список автокорреляции
    return acf

# загрузка сигнала
signal = load_signal("Sin.txt")

# устанавливаем макс значение сдвига для автокорреляции
max_tau = 1000

# расчет автокорреляции для сигнала
acf_values = auto_correlation(signal, max_tau)

# построение графика автокорреляционной функции
plt.figure(figsize=(10, 5))  # размер графика
plt.plot(range(max_tau + 1), acf_values)  # график значений автокорреляции
plt.title('АКФ')  # заголовок
plt.xlabel('Сдвиг (tau)')  # подпись X
plt.ylabel('Автокорреляция')  # подпись Y
plt.grid()  # включаем сетку
plt.show()  # отображаем